// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gossip.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	gossip.proto

It has these top-level messages:
	Update
	Publish
	Join
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Update struct {
	// Types that are valid to be assigned to Type:
	//	*Update_Publish
	//	*Update_Join
	Type isUpdate_Type `protobuf_oneof:"type"`
}

func (m *Update) Reset()                    { *m = Update{} }
func (m *Update) String() string            { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()               {}
func (*Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isUpdate_Type interface {
	isUpdate_Type()
}

type Update_Publish struct {
	Publish *Publish `protobuf:"bytes,1,opt,name=publish,oneof"`
}
type Update_Join struct {
	Join *Join `protobuf:"bytes,2,opt,name=join,oneof"`
}

func (*Update_Publish) isUpdate_Type() {}
func (*Update_Join) isUpdate_Type()    {}

func (m *Update) GetType() isUpdate_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Update) GetPublish() *Publish {
	if x, ok := m.GetType().(*Update_Publish); ok {
		return x.Publish
	}
	return nil
}

func (m *Update) GetJoin() *Join {
	if x, ok := m.GetType().(*Update_Join); ok {
		return x.Join
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Update) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Update_OneofMarshaler, _Update_OneofUnmarshaler, _Update_OneofSizer, []interface{}{
		(*Update_Publish)(nil),
		(*Update_Join)(nil),
	}
}

func _Update_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Update)
	// type
	switch x := m.Type.(type) {
	case *Update_Publish:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Publish); err != nil {
			return err
		}
	case *Update_Join:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Join); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Update.Type has unexpected type %T", x)
	}
	return nil
}

func _Update_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Update)
	switch tag {
	case 1: // type.publish
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Publish)
		err := b.DecodeMessage(msg)
		m.Type = &Update_Publish{msg}
		return true, err
	case 2: // type.join
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Join)
		err := b.DecodeMessage(msg)
		m.Type = &Update_Join{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Update_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Update)
	// type
	switch x := m.Type.(type) {
	case *Update_Publish:
		s := proto.Size(x.Publish)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Update_Join:
		s := proto.Size(x.Join)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Publish struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Publish) Reset()                    { *m = Publish{} }
func (m *Publish) String() string            { return proto.CompactTextString(m) }
func (*Publish) ProtoMessage()               {}
func (*Publish) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Publish) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Join struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Bind string `protobuf:"bytes,2,opt,name=bind" json:"bind,omitempty"`
}

func (m *Join) Reset()                    { *m = Join{} }
func (m *Join) String() string            { return proto.CompactTextString(m) }
func (*Join) ProtoMessage()               {}
func (*Join) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Join) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Join) GetBind() string {
	if m != nil {
		return m.Bind
	}
	return ""
}

func init() {
	proto.RegisterType((*Update)(nil), "pb.Update")
	proto.RegisterType((*Publish)(nil), "pb.Publish")
	proto.RegisterType((*Join)(nil), "pb.Join")
}

func init() { proto.RegisterFile("gossip.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcf, 0x2f, 0x2e,
	0xce, 0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x8a, 0xe4, 0x62,
	0x0b, 0x2d, 0x48, 0x49, 0x2c, 0x49, 0x15, 0x52, 0xe7, 0x62, 0x2f, 0x28, 0x4d, 0xca, 0xc9, 0x2c,
	0xce, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x36, 0xe2, 0xd6, 0x2b, 0x48, 0xd2, 0x0b, 0x80, 0x08,
	0x79, 0x30, 0x04, 0xc1, 0x64, 0x85, 0xe4, 0xb8, 0x58, 0xb2, 0xf2, 0x33, 0xf3, 0x24, 0x98, 0xc0,
	0xaa, 0x38, 0x40, 0xaa, 0xbc, 0xf2, 0x33, 0xf3, 0x3c, 0x18, 0x82, 0xc0, 0xe2, 0x4e, 0x6c, 0x5c,
	0x2c, 0x25, 0x95, 0x05, 0xa9, 0x4a, 0xca, 0x5c, 0xec, 0x50, 0xdd, 0x42, 0x12, 0x5c, 0xec, 0x05,
	0x89, 0x95, 0x39, 0xf9, 0x89, 0x29, 0x60, 0xb3, 0x79, 0x82, 0x60, 0x5c, 0x25, 0x2d, 0x2e, 0x16,
	0x90, 0x66, 0x21, 0x3e, 0x2e, 0xa6, 0x4c, 0x88, 0x24, 0x67, 0x10, 0x53, 0x66, 0x8a, 0x90, 0x10,
	0x17, 0x4b, 0x52, 0x66, 0x5e, 0x0a, 0xd8, 0x12, 0xce, 0x20, 0x30, 0x3b, 0x89, 0x0d, 0xec, 0x6c,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xa5, 0x27, 0x74, 0xc6, 0x00, 0x00, 0x00,
}
